"0","load(here('data', 'MST_Distance_Networks.RData'))"
"0",""
"0","# Getting iso_codes"
"0","iso_codes <- rownames(MST_37)"
"0",""
"0","# Get the world cities data"
"0","data(world.cities)"
"0",""
"0","# Filter for capital cities and match with the provided country names"
"0","capitals <- subset(world.cities, capital == 1)"
"0",""
"0","# Create a vector mapping country names to ISO codes"
"0","country_names <- countrycode(iso_codes, ""iso2c"", ""country.name"")"
"0",""
"0","# Create a data frame with country names and corresponding ISO codes"
"0","country_iso_df <- data.frame("
"0","  country = country_names,"
"0","  iso_code = iso_codes,"
"0","  stringsAsFactors = FALSE"
"0",")"
"0",""
"0","replace_map <- data.frame("
"0","  From = c(""USA"", ""UK"", ""Czech Republic"", ""Korea South""),"
"0","  To = c(""United States"", ""United Kingdom"", ""Czechia"", ""South Korea"")"
"0",")"
"0",""
"0",""
"0","# Replace country names in df based on condition"
"0","capitals$country.etc <- ifelse(capitals$country.etc %in% replace_map$From, "
"0","                               replace_map$To[match(capitals$country.etc, replace_map$From)],"
"0","                               capitals$country.etc)"
"0",""
"0","# Merge this with capitals_subset to add ISO codes"
"0","capitals_subset <- subset(capitals, country.etc %in% country_names)"
"0",""
"0","# Join the ISO codes to capitals_subset, now have longitudes and latitudes of each contry with iso code"
"0",""
"0","capitals_subset <- merge(capitals_subset, country_iso_df, by.x = ""country.etc"", by.y = ""country"", all.x = TRUE)"
"0","capitals_subset <- capitals_subset[!duplicated(capitals_subset$country.etc), ]"
"0",""
"0","coords <- data.frame("
"0","  country_codes = capitals_subset$iso_code,  # replace with your actual country names"
"0","  latitude = capitals_subset$lat,"
"0","  longitude = capitals_subset$long"
"0",")"
"0","head(coords)"
